stages:
  - preparation
  - building
  - testing
  - security
  - deploy

image: edbizarro/gitlab-ci-pipeline-php:7.3-alpine

.init_ssh: &init_ssh |
  eval $(ssh-agent -s)
  echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  mkdir -p ~/.ssh
  chmod 700 ~/.ssh
  [[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

.change_file_permissions: &change_file_permissions |
  find . -type f -not -path "./vendor/*" -exec chmod 664 {} \;
  find . -type d -not -path "./vendor/*" -exec chmod 775 {} \;

# Variables
variables:
  MYSQL_DATABASE: homestead
  MYSQL_ROOT_PASSWORD: secret

cache:
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"

composer:
  stage: preparation
  script:
    - php -v
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
    - cp .env.testing .env
    - php artisan key:generate
  artifacts:
    paths:
      - vendor/
      - .env
    expire_in: 1 days
    when: always
  cache:
    paths:
      - vendor/

npm:
  stage: preparation
  script:
    - npm --version
    - npm ci
  artifacts:
    paths:
      - node_modules/
    expire_in: 1 days
    when: always
  cache:
    paths:
      - node_modules/

build-assets:
  stage: building
  # Download the artifacts for these jobs
  needs:
    - npm
  script:
    - npm --version
    - npm run production --no-progress
  artifacts:
    paths:
      - public/css/
      - public/js/
      - public/fonts/
      - public/mix-manifest.json
    expire_in: 1 days
    when: always

db-seeding:
  stage: building
  services:
    - mysql:5.7
  # Download the artifacts for these jobs
  needs:
    - composer
  script:
    - php artisan migrate:fresh --seed
  artifacts:
    paths:
      - ./storage/logs # for debugging
    expire_in: 1 days
    when: on_failure

phpunit:
  stage: testing
  services:
    - mysql:5.7
  # Download the artifacts for these jobs
  needs:
    - composer
  script:
    - php -v
    - vendor/bin/phpunit --coverage-text --colors=never --coverage-clover code-coverage --log-junit test-executions
  artifacts:
    paths:
      - ./storage/logs # for debugging
      - code-coverage
      - test-executions
    expire_in: 1 days
    when: always

codestyle:
  stage: testing
  image: lorisleiva/laravel-docker
  script:
    - phpcs --extensions=php app
  dependencies: []
  allow_failure: true

phpcpd:
  stage: testing
  script:
    - test -f phpcpd.phar || curl -L https://phar.phpunit.de/phpcpd.phar -o phpcpd.phar
    - php phpcpd.phar app/ --min-lines=50
  dependencies: []
  cache:
    paths:
      - phpcpd.phar

sensiolabs:
  stage: security
  script:
    - test -d security-checker || git clone https://github.com/sensiolabs/security-checker.git
    - cd security-checker
    - php security-checker security:check ../composer.lock
  needs:
    - composer
  cache:
    paths:
      - security-checker/
  allow_failure: true

sonarqube:
  image: johnnei/sonarqube-scanner:3.2.0.1227-4
  stage: security
  needs:
  - composer
  - phpunit
  only:
  - dev
  script:
  - "sonar-scanner -Dsonar.login=$SONAR_TOKEN"


staging:
  stage: deploy
  image: lorisleiva/laravel-docker
  script:
  - *init_ssh
  - *change_file_permissions
  - php artisan deploy 104.248.84.152 -s upload

  environment:
    name: staging
    url: https://bmac.daveroverts.nl

  only:
  - dev

production:
  stage: deploy
  image: lorisleiva/laravel-docker
  script:
  - *init_ssh
  - *change_file_permissions
  - php artisan deploy vps1.dutchvacc.nl -s upload

  environment:
    name: production
    url: https://booking.dutchvacc.nl

  when: manual

  only:
  - master
